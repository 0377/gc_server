#pragma once

#include "DBConnectionPool.h"
#include "Singleton.h"
#include "common_msg_define.pb.h"

/**********************************************************************************************//**
 * \class	GateDBManager
 *
 * \brief	Manager for databases.
 **************************************************************************************************/

#if 0
class GateDBManager : public TSingleton<GateDBManager>
{
public:

	/**********************************************************************************************//**
	 * \brief	Default constructor.
	 **************************************************************************************************/

	GateDBManager();

	/**********************************************************************************************//**
	 * \brief	Destructor.
	 **************************************************************************************************/

	virtual ~GateDBManager();

	/**********************************************************************************************//**
	 * \brief	开启数据库线程并运行.
	 **************************************************************************************************/

	void run();

	/**********************************************************************************************//**
	 * \brief	等待线程结束.
	 **************************************************************************************************/

	void join();

	/**********************************************************************************************//**
	 * \brief	请求关闭.
	 **************************************************************************************************/

	void stop();

	/**********************************************************************************************//**
	 * \brief	每一帧调用.
	 **************************************************************************************************/

	virtual void tick();

	/**********************************************************************************************//**
	 * \brief	得到config数据库.
	 *
	 * \return	The database connection account.
	 **************************************************************************************************/

	DBConnectionPool& get_db_connection_config() { return db_connection_config_; }

protected:
	DBConnectionPool							db_connection_config_;
};

#endif