#pragma once

#include "perinclude.h"
#include "BaseGameServer.h"
#include "GameSessionManager.h"
#include "TableManager.h"

/**********************************************************************************************//**
 * \class	GameFishing
 *
 * \brief	A game server.
 **************************************************************************************************/

class GameFishing : public BaseGameServer
{
public:

	/**********************************************************************************************//**
	 * \brief	Default constructor.
	 **************************************************************************************************/

	GameFishing();

	/**********************************************************************************************//**
	 * \brief	Destructor.
	 **************************************************************************************************/

	~GameFishing();
	
	/**********************************************************************************************//**
	 * \brief	初始化.
	 *
	 * \return	true if it succeeds, false if it fails.
	 **************************************************************************************************/

	virtual bool init();

	/**********************************************************************************************//**
	 * \brief	释放.
	 **************************************************************************************************/

	virtual void release();

	/**********************************************************************************************//**
	 * \brief	日志文件名.
	 *
	 * \return	null if it fails, else a pointer to a const char.
	 **************************************************************************************************/

	virtual const char* log_file_name();

	/**********************************************************************************************//**
	 * \brief	dump文件名.
	 *
	 * \return	null if it fails, else a pointer to a const wchar_t.
	 **************************************************************************************************/

	virtual const wchar_t* dump_file_name();

	/**********************************************************************************************//**
	 * \brief	调用的脚本文件.
	 *
	 * \return	null if it fails, else a pointer to a const char.
	 **************************************************************************************************/

	virtual const char* main_lua_file();

protected:
	virtual void on_tick();
	virtual GameSessionManager* new_session_manager();
	virtual BaseGameLuaScriptManager* new_lua_script_manager();

private:
	std::unique_ptr<TableManager>				table_manager_;
};